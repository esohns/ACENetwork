
1. connections

1.1. connection-oriented (SOCK_STREAM)
1.1.1. supported protocols [currently TCP (synch/asynch)]
1.1.1.1. TCP: establishment
TBD

1.1.1.2. TCP: initialization (open(), invoked by connector ('client') (/ acceptor ('server')))
i.  references (base class Common_ReferenceCounter (asynch), ACE_Event_Handler (synch):
 +1 (connection manager, if applicable) --> maximum number of connections reached ?
 +1 (read operation)
[+n up-tier/upstream modules, as applicable]
--> 2 [+n]
ii. state:
set to NET_CONNECTION_STATUS_OK at the end of open() [ACE_Service_Handler (asynch), ACE_Task (synch)]

1.1.1.3. TCP: termination
1.1.1.3.1. errors
1.1.1.3.1.1. 'client' side
i.   connect() failed (timeout, refused, ...)
ii.  recv()    failed ([timeout,] reset, cancelled (asynch) / socket closed (synch), ...)
iii. send()    failed ([timeout,] reset, cancelled (asynch) / socket closed (synch), ...)
iv.  local (user) abort()
1.1.1.3.1.2. 'server' side
[i. accept failed] --> no available OS file descriptors ?
ii.  recv()    failed ([timeout,] reset, cancelled [(asynch) /] socket closed (synch), ...)
iii. send()    failed ([timeout,] reset, cancelled [(asynch) /] socket closed (synch), ...)
iv.  local (user) abort()

1.1.1.3.2. TCP: shutdown ('client' side only)
i.   local (user) close()
ii.  references (base class Common_ReferenceCounter (asynch), ACE_Event_Handler (synch):
 -1 (connection manager, if applicable)
 -1 (read operation)
 -n (write operations)
[-m up-tier/upstream modules, as applicable]
--> -2-n [-m]
iii. memory:
heap memory reclaimed at the end of (final) handle_close (delete this)

////////////////////////////////////////////////////////////////////////////////////////////////

1.2. datagram-oriented (SOCK_DGRAM)
1.2.1. supported protocols [currently UDP, Netlink]
i. UDP
1.2.1.1. UDP: establishment
TBD (investigate 'connected' socket specifics, path MTU discovery process)

1.2.1.2. UDP: initialization (open(), invoked by connector ('client') (/ acceptor ('server')))
i.  references (base class Common_ReferenceCounter (asynch), ACE_Event_Handler (synch):
 +1 connection manager, if applicable --> maximum number of connections reached ?
 (+1 read operation 'server' side, 'client' side if applicable)
[+n up-tier/upstream modules, as applicable]
--> 1/2 [+n]
ii. state:
set to NET_CONNECTION_STATUS_OK at the end of open() [ACE_Service_Handler (asynch), ACE_Task (synch)]

1.2.1.3. termination
1.2.1.3.1. errors
1.2.1.3.1.1 'client' side
[i.  connect() failed see 1.2.1.]
(ii. recv() failed ([timeout,] reset, cancelled (asynch) / socket closed (synch), ...))
iii. send() failed ([timeout,] reset, cancelled (asynch) / socket closed (synch), ...)
iv.  local (user) abort
1.2.1.3.1.2. 'server' side
[i.  connect() failed see 1.2.1.]
ii.  recv()    failed ([timeout,] reset, cancelled [(asynch) /] socket closed (synch), ...)
(iii. send()    failed ([timeout,] reset, cancelled [(asynch) /] socket closed (synch), ...))
iv.  local (user) abort

1.2.1.3.2. UDP: shutdown ('client' side only)
i.   local (user) close()
ii.  references (base class Common_ReferenceCounter (asynch), ACE_Event_Handler (synch):
 -1 (connection manager, if applicable)
 (-1 read operation 'server' side, 'client' side if applicable)
 -n (write operations)
[-n up-tier/upstream modules, as applicable]--> -2-n [-m]
iii. memory:
heap memory reclaimed at the end of (final) handle_close (delete this)

ii. Netlink
TBD
